var toExport = {}
var _k_ = {list: function (l) {return l != null ? typeof l.length === 'number' ? l : [] : []}}

var b, dissect, dss, ext, i, inc, lang, parse, ranges, rgs

import kolor from "./kolor.js"


inc = function (rgs, start, match)
{
    var r

    var list = _k_.list(rgs)
    for (var _11_35_ = 0; _11_35_ < list.length; _11_35_++)
    {
        r = list[_11_35_]
        if (r.start === start && r.match === match)
        {
            return r.clss
        }
    }
}
ext = 'coffee'

lang = function (l)
{
    return ext = l
}

ranges = function (s, e)
{
    return kolor.ranges(s,(e != null ? e : ext))
}

parse = function (c, e)
{
    return kolor.parse(c.split('\n'),(e != null ? e : ext))
}

dissect = function (c, e)
{
    return kolor.dissect(c.split('\n'),(e != null ? e : ext))
}
toExport["ranges"] = function ()
{
    section("fallback", function ()
    {
        rgs = ranges('text','unknown')
        compare(inc(rgs,0,'text'),'text')
        rgs = ranges('text','fish')
        compare(inc(rgs,0,'text'),'text')
        rgs = ranges("###",'.coffee')
        compare(inc(rgs,0,"#"),'punct comment triple')
    })
    section("unicode", function ()
    {
        lang('coffee')
        rgs = ranges("🌈")
        compare(inc(rgs,0,'🌈'),'text')
        rgs = ranges("🌈🌱")
        compare(inc(rgs,0,'🌈'),'text')
        compare(inc(rgs,2,'🌱'),'text')
        rgs = ranges("🙂lol😀")
        compare(inc(rgs,0,'🙂'),'text')
        compare(inc(rgs,2,'lol'),'text')
        compare(inc(rgs,5,'😀'),'text')
        rgs = ranges("a➜b a▬▶b")
        compare(inc(rgs,1,'➜'),'punct')
        compare(inc(rgs,5,'▬'),'punct')
        compare(inc(rgs,6,'▶'),'punct')
        rgs = ranges("🐀🐁🐂🐃🐄🐅🐆🐇🐈🐉🐊🐋🐌🐍🐎🐏🐐🐑🐒🐓🐔🐕🐖🐗🐘🐙🐚🐛🐜🐝🐞🐟🐠🐡🐢🐣🐤🐥")
        compare(inc(rgs,0,'🐀'),'text')
        compare(inc(rgs,24,'🐌'),'text')
        rgs = ranges("'🔧' bla:1")
        compare(inc(rgs,6,'bla'),'dictionary key')
        rgs = ranges("icon: '🔧' bla:1")
        compare(inc(rgs,12,'bla'),'dictionary key')
    })
    section("comments", function ()
    {
        lang('coffee')
        rgs = ranges("hello # world")
        compare(inc(rgs,6,"#"),'punct comment')
        compare(inc(rgs,8,"world"),'comment')
        lang('noon')
        rgs = ranges("   # bla blub")
        compare(inc(rgs,3,"#"),'punct comment')
        compare(inc(rgs,5,"bla"),'comment')
        compare(inc(rgs,9,"blub"),'comment')
    })
    section("triple comment", function ()
    {
        lang('coffee')
        rgs = ranges("###a###")
        compare(inc(rgs,0,"#"),'punct comment triple')
        compare(inc(rgs,1,"#"),'punct comment triple')
        compare(inc(rgs,2,"#"),'punct comment triple')
        compare(inc(rgs,3,"a"),'comment triple')
        compare(inc(rgs,4,"#"),'punct comment triple')
        compare(inc(rgs,5,"#"),'punct comment triple')
        compare(inc(rgs,6,"#"),'punct comment triple')
        dss = dissect("###\na\n###")
        compare(inc(dss[0],0,"#"),'punct comment triple')
        compare(inc(dss[0],1,"#"),'punct comment triple')
        compare(inc(dss[0],2,"#"),'punct comment triple')
        compare(inc(dss[1],0,"a"),'comment triple')
        compare(inc(dss[2],0,"#"),'punct comment triple')
        compare(inc(dss[2],1,"#"),'punct comment triple')
        compare(inc(dss[2],2,"#"),'punct comment triple')
        lang('styl')
        dss = dissect("/*\na\n*/")
        compare(inc(dss[0],0,"/"),'punct comment triple')
        compare(inc(dss[0],1,"*"),'punct comment triple')
        compare(inc(dss[1],0,"a"),'comment triple')
        compare(inc(dss[2],0,"*"),'punct comment triple')
        compare(inc(dss[2],1,"/"),'punct comment triple')
    })
    section("comment header", function ()
    {
        lang('coffee')
        rgs = ranges("# 0 00 0000")
        compare(inc(rgs,0,"#"),'punct comment')
        compare(inc(rgs,2,"0"),'comment header')
        compare(inc(rgs,4,"00"),'comment header')
        compare(inc(rgs,7,"0000"),'comment header')
        dss = dissect("###\n 0 00 0 \n###")
        compare(inc(dss[1],1,"0"),'comment triple header')
        rgs = ranges("# 0 * 0.2")
        compare(inc(rgs,2,'0'),'comment')
        compare(inc(rgs,6,'0'),'comment')
        dss = dissect("###\n 0 1 0 \n###")
        compare(inc(dss[1],1,"0"),'comment triple')
        lang('styl')
        rgs = ranges("// 000")
        compare(inc(rgs,3,"000"),'comment header')
        dss = dissect("/*\n 0 0 0 \n*/")
        compare(inc(dss[1],1,"0"),'comment triple header')
    })
    section("numbers", function ()
    {
        lang('coffee')
        rgs = ranges("a 6670")
        compare(inc(rgs,2,"6670"),'number')
        rgs = ranges("0x667AC")
        compare(inc(rgs,0,"0x667AC"),'number hex')
        rgs = ranges("66.700")
        compare(inc(rgs,0,"66"),'number float')
        compare(inc(rgs,2,"."),'punct number float')
        compare(inc(rgs,3,"700"),'number float')
        rgs = ranges("77.800 -100")
        compare(inc(rgs,0,"77"),'number float')
        compare(inc(rgs,8,"100"),'number')
        rgs = ranges("(8.9,100.2)")
        compare(inc(rgs,3,"9"),'number float')
        compare(inc(rgs,9,"2"),'number float')
    })
    section("semver", function ()
    {
        lang('coffee')
        rgs = ranges("66.70.0")
        compare(inc(rgs,0,"66"),'semver')
        compare(inc(rgs,2,"."),'punct semver')
        compare(inc(rgs,3,"70"),'semver')
        compare(inc(rgs,5,"."),'punct semver')
        compare(inc(rgs,6,"0"),'semver')
        rgs = ranges("^0.7.1")
        compare(inc(rgs,0,"^"),'punct semver')
        compare(inc(rgs,1,"0"),'semver')
        compare(inc(rgs,3,"7"),'semver')
        compare(inc(rgs,5,"1"),'semver')
        rgs = ranges("^1.0.0-alpha.12")
        compare(inc(rgs,1,"1"),'semver')
        compare(inc(rgs,3,"0"),'semver')
        compare(inc(rgs,5,"0"),'semver')
        rgs = ranges(">=6.7.9")
        compare(inc(rgs,0,">"),'punct semver')
        compare(inc(rgs,1,"="),'punct semver')
        compare(inc(rgs,2,"6"),'semver')
        compare(inc(rgs,3,"."),'punct semver')
        compare(inc(rgs,4,"7"),'semver')
        compare(inc(rgs,5,"."),'punct semver')
        compare(inc(rgs,6,"9"),'semver')
    })
    section("strings", function ()
    {
        lang('coffee')
        rgs = ranges("slash = require 'kslash'")
        compare(inc(rgs,16,"'"),'punct string single')
        compare(inc(rgs,17,"kslash"),'string single')
        compare(inc(rgs,23,"'"),'punct string single')
        rgs = ranges('a="\'X\'"')
        compare(inc(rgs,2,'"'),'punct string double')
        compare(inc(rgs,3,"'"),'string double')
        compare(inc(rgs,4,"X"),'string double')
        compare(inc(rgs,6,'"'),'punct string double')
        rgs = ranges('a=\'"X"\'','coffee')
        compare(inc(rgs,2,"'"),'punct string single')
        compare(inc(rgs,3,'"'),'string single')
        compare(inc(rgs,4,'X'),'string single')
        compare(inc(rgs,6,"'"),'punct string single')
        rgs = ranges('a="  \'X\'  Y  " ')
        compare(inc(rgs,2,'"'),'punct string double')
        compare(inc(rgs,5,"'"),'string double')
        compare(inc(rgs,6,"X"),'string double')
        compare(inc(rgs,7,"'"),'string double')
        compare(inc(rgs,13,'"'),'punct string double')
        rgs = ranges('a="";b=" ";c="X"')
        var list = [2,3,7,9,13,15]
        for (var _265_14_ = 0; _265_14_ < list.length; _265_14_++)
        {
            i = list[_265_14_]
            compare(inc(rgs,i,'"'),'punct string double')
        }
        compare(inc(rgs,14,'X'),'string double')
        rgs = ranges("a='';b=' ';c='Y'")
        var list1 = [2,3,7,9,13,15]
        for (var _270_14_ = 0; _270_14_ < list1.length; _270_14_++)
        {
            i = list1[_270_14_]
            compare(inc(rgs,i,"'"),'punct string single')
        }
        compare(inc(rgs,14,'Y'),'string single')
        rgs = ranges('"s = \'/some\\path/file.txt:10\'"')
        compare(inc(rgs,5,"'"),'string double')
        compare(inc(rgs,17,"file"),'string double')
        compare(inc(rgs,21,"."),'string double')
        compare(inc(rgs,22,"txt"),'string double')
        compare(inc(rgs,26,"10"),'string double')
        compare(inc(rgs,28,"'"),'string double')
        compare(inc(rgs,29,'"'),'punct string double')
        rgs = ranges("when '\"\"\"' then 'string double triple'")
        compare(inc(rgs,6,'"'),'string single')
        compare(inc(rgs,7,'"'),'string single')
        compare(inc(rgs,8,'"'),'string single')
        rgs = ranges('"#{xxx}"')
        compare(inc(rgs,0,'"'),'punct string double')
        compare(inc(rgs,1,"#"),'punct string interpolation start')
        compare(inc(rgs,2,"{"),'punct string interpolation start')
        compare(inc(rgs,3,'xxx'),'text')
        compare(inc(rgs,6,"}"),'punct string interpolation end')
        compare(inc(rgs,7,'"'),'punct string double')
        rgs = ranges('"#{666}"')
        compare(inc(rgs,0,'"'),'punct string double')
        compare(inc(rgs,3,'666'),'number')
        compare(inc(rgs,7,'"'),'punct string double')
        rgs = ranges('"""#{777}"""')
        compare(inc(rgs,0,'"'),'punct string double triple')
        compare(inc(rgs,1,'"'),'punct string double triple')
        compare(inc(rgs,2,'"'),'punct string double triple')
        compare(inc(rgs,3,'#'),'punct string interpolation start')
        compare(inc(rgs,4,'{'),'punct string interpolation start')
        compare(inc(rgs,5,'777'),'number')
        compare(inc(rgs,8,'}'),'punct string interpolation end')
        compare(inc(rgs,9,'"'),'punct string double triple')
        compare(inc(rgs,10,'"'),'punct string double triple')
        compare(inc(rgs,11,'"'),'punct string double triple')
        rgs = ranges('"#{__dirname}/../"')
        compare(inc(rgs,12,'}'),'punct string interpolation end')
        compare(inc(rgs,13,'/'),'string double')
        lang('txt')
        rgs = ranges("it's all we'll ever need. we'd never do that!")
        compare(inc(rgs,2,"'"),'punct')
        compare(inc(rgs,3,"s"),'text')
        compare(inc(rgs,11,"'"),'punct')
        compare(inc(rgs,28,"'"),'punct')
        rgs = ranges("'it' s, 'we' ll")
        compare(inc(rgs,0,"'"),'punct string single')
        compare(inc(rgs,3,"'"),'punct string single')
        compare(inc(rgs,5,"s"),'text')
        compare(inc(rgs,8,"'"),'punct string single')
        compare(inc(rgs,11,"'"),'punct string single')
        compare(inc(rgs,13,"ll"),'text')
        rgs = ranges("['s' 'll' 'd' 't']")
        compare(inc(rgs,1,"'"),'punct string single')
        compare(inc(rgs,2,"s"),'string single')
        compare(inc(rgs,3,"'"),'punct string single')
        compare(inc(rgs,5,"'"),'punct string single')
        compare(inc(rgs,8,"'"),'punct string single')
        lang('coffee')
        rgs = ranges("p = 'c:\\\\path\\\\'; 1")
        compare(inc(rgs,4,"'"),'punct string single')
        compare(inc(rgs,5,"c"),'string single')
        compare(inc(rgs,6,":"),'string single')
        compare(inc(rgs,7,"\\"),'string single')
        compare(inc(rgs,8,"\\"),'string single')
        compare(inc(rgs,9,"path"),'string single')
        compare(inc(rgs,13,"\\"),'string single')
        compare(inc(rgs,14,"\\"),'string single')
        compare(inc(rgs,15,"'"),'punct string single')
        compare(inc(rgs,16,";"),'punct minor')
        compare(inc(rgs,18,"1"),'number')
        rgs = ranges('a="\\"X\\""')
        compare(inc(rgs,2,'"'),'punct string double')
        compare(inc(rgs,3,'\\'),'string double')
        compare(inc(rgs,4,'"'),'string double')
        compare(inc(rgs,5,'X'),'string double')
        compare(inc(rgs,6,'\\'),'string double')
        compare(inc(rgs,7,'"'),'string double')
        compare(inc(rgs,8,'"'),'punct string double')
    })
    section("noon", function ()
    {
        lang('noon')
        rgs = ranges("    property  value")
        compare(inc(rgs,4,'property'),'property')
        compare(inc(rgs,14,'value'),'text')
        rgs = ranges("top",'noon')
        compare(inc(rgs,0,'top'),'obj')
        rgs = ranges("tip top")
        compare(inc(rgs,0,'tip'),'obj')
        compare(inc(rgs,4,'top'),'obj')
        rgs = ranges("top  prop")
        compare(inc(rgs,0,'top'),'obj')
        compare(inc(rgs,5,'prop'),'text')
        rgs = ranges("version  ^0.1.2")
        compare(inc(rgs,0,'version'),'obj')
        compare(inc(rgs,9,'^'),'punct semver')
        compare(inc(rgs,10,'0'),'semver')
        rgs = ranges("    some-package-name  1")
        compare(inc(rgs,4,'some'),'property')
        compare(inc(rgs,9,'package'),'property')
        compare(inc(rgs,17,'name'),'property')
        rgs = ranges("    some-package-name  ^1.2.3")
        compare(inc(rgs,4,'some'),'property')
        compare(inc(rgs,9,'package'),'property')
        compare(inc(rgs,17,'name'),'property')
        rgs = ranges("top  prop  value")
        compare(inc(rgs,0,'top'),'obj')
        compare(inc(rgs,5,'prop'),'property')
        compare(inc(rgs,11,'value'),'text')
        rgs = ranges("    http://domain.com")
        compare(inc(rgs,4,'http'),'url protocol')
        compare(inc(rgs,8,':'),'punct url')
        compare(inc(rgs,9,'/'),'punct url')
        compare(inc(rgs,10,'/'),'punct url')
        compare(inc(rgs,11,'domain'),'url domain')
        compare(inc(rgs,17,'.'),'punct url tld')
        compare(inc(rgs,18,'com'),'url tld')
        rgs = ranges("    http://domain.com/dir/page.html")
        compare(inc(rgs,4,'http'),'url protocol')
        compare(inc(rgs,8,':'),'punct url')
        compare(inc(rgs,9,'/'),'punct url')
        compare(inc(rgs,10,'/'),'punct url')
        compare(inc(rgs,11,'domain'),'url domain')
        compare(inc(rgs,17,'.'),'punct url tld')
        compare(inc(rgs,18,'com'),'url tld')
        compare(inc(rgs,21,'/'),'punct dir')
        rgs = ranges("    file.coffee")
        compare(inc(rgs,4,'file'),'coffee file')
        compare(inc(rgs,8,'.'),'punct coffee')
        compare(inc(rgs,9,'coffee'),'coffee ext')
        rgs = ranges("    /some/path")
        compare(inc(rgs,5,'some'),'text dir')
        compare(inc(rgs,9,'/'),'punct dir')
        compare(inc(rgs,10,'path'),'text file')
        rgs = ranges('    /some\\path/file.txt:10')
        compare(inc(rgs,4,'/'),'punct dir')
        compare(inc(rgs,5,'some'),'text dir')
        compare(inc(rgs,9,'\\'),'punct dir')
        compare(inc(rgs,19,'.'),'punct txt')
        compare(inc(rgs,23,':'),'punct')
        rgs = ranges("    test  ./node_modules/.bin/mocha")
        compare(inc(rgs,4,'test'),'property')
        compare(inc(rgs,10,'.'),'punct dir')
        compare(inc(rgs,11,'/'),'punct dir')
        compare(inc(rgs,12,'node_modules'),'text dir')
        compare(inc(rgs,24,'/'),'punct dir')
        compare(inc(rgs,25,'.'),'punct dir')
        compare(inc(rgs,26,'bin'),'text dir')
        compare(inc(rgs,29,'/'),'punct dir')
        compare(inc(rgs,30,'mocha'),'text file')
    })
    section("coffee", function ()
    {
        lang('coffee')
        rgs = ranges("util = require 'util'")
        compare(inc(rgs,7,'require'),'require')
        rgs = ranges("class Macro extends Command")
        compare(inc(rgs,0,'class'),'keyword')
        compare(inc(rgs,6,'Macro'),'class')
        compare(inc(rgs,12,'extends'),'keyword')
        compare(inc(rgs,20,'Command'),'class')
        rgs = ranges("exist?.prop")
        compare(inc(rgs,7,'prop'),'property')
        rgs = ranges("a and b")
        compare(inc(rgs,0,"a"),'text')
        compare(inc(rgs,2,"and"),'keyword')
        rgs = ranges("if a then b")
        compare(inc(rgs,0,"if"),'keyword')
        compare(inc(rgs,3,"a"),'text')
        compare(inc(rgs,5,"then"),'keyword')
        compare(inc(rgs,10,"b"),'text')
        rgs = ranges("switch a")
        compare(inc(rgs,0,"switch"),'keyword')
        rgs = ranges(" a: b")
        compare(inc(rgs,1,"a"),'dictionary key')
        compare(inc(rgs,2,":"),'punct dictionary')
        rgs = ranges("obj.value = obj.another.value")
        compare(inc(rgs,0,"obj"),'obj')
        compare(inc(rgs,4,"value"),'property')
        compare(inc(rgs,12,"obj"),'obj')
        compare(inc(rgs,16,"another"),'property')
        compare(inc(rgs,24,"value"),'property')
        rgs = ranges("if someObject.someProp")
        compare(inc(rgs,0,"if"),'keyword')
        compare(inc(rgs,3,"someObject"),'obj')
        compare(inc(rgs,13,"."),'punct property')
        compare(inc(rgs,14,"someProp"),'property')
        rgs = ranges("1 'a'")
        compare(inc(rgs,0,"1"),'number')
        rgs = ranges("a[0].prop")
        compare(inc(rgs,3,']'),'punct')
        rgs = ranges("[ f ]")
        compare(inc(rgs,2,'f'),'text')
        rgs = ranges("[ f , f ]")
        compare(inc(rgs,2,'f'),'text')
        rgs = ranges("a[...2]")
        compare(inc(rgs,2,'.'),'punct range')
        compare(inc(rgs,3,'.'),'punct range')
        compare(inc(rgs,4,'.'),'punct range')
        rgs = ranges("a[ -1 .. ]")
        compare(inc(rgs,6,'.'),'punct range')
        compare(inc(rgs,7,'.'),'punct range')
        rgs = ranges("a[1..n]")
        compare(inc(rgs,3,'.'),'punct range')
        compare(inc(rgs,4,'.'),'punct range')
        rgs = ranges("a[ .... ]")
        compare(inc(rgs,3,'.'),'punct')
        compare(inc(rgs,4,'.'),'punct')
        compare(inc(rgs,5,'.'),'punct')
        compare(inc(rgs,6,'.'),'punct')
        rgs = ranges("@f [1]")
        compare(inc(rgs,0,"@"),'punct function call')
        compare(inc(rgs,1,"f"),'function call')
        rgs = ranges("@f = 1")
        compare(inc(rgs,0,"@"),'punct this')
        compare(inc(rgs,1,"f"),'text this')
        rgs = ranges("@height/2 + @height/6")
        compare(inc(rgs,0,'@'),'punct this')
        compare(inc(rgs,1,'height'),'text this')
        compare(inc(rgs,8,"2"),'number')
        section("function", function ()
        {
            lang('coffee')
            rgs = ranges("obj.prop.call 1")
            compare(inc(rgs,0,'obj'),'obj')
            compare(inc(rgs,4,'prop'),'property')
            compare(inc(rgs,9,'call'),'function call')
            rgs = ranges("dolater =>")
            compare(inc(rgs,8,'='),'punct function bound tail')
            compare(inc(rgs,9,'>'),'punct function bound head')
            rgs = ranges("dolater ->")
            compare(inc(rgs,8,'-'),'punct function tail')
            compare(inc(rgs,9,'>'),'punct function head')
            rgs = ranges("async ○->")
            compare(inc(rgs,6,'○'),'punct function async')
            compare(inc(rgs,7,'-'),'punct function tail')
            compare(inc(rgs,8,'>'),'punct function head')
            rgs = ranges("@a @b 'c'")
            compare(inc(rgs,0,'@'),'punct function call')
            compare(inc(rgs,1,'a'),'function call')
            compare(inc(rgs,3,'@'),'punct function call')
            compare(inc(rgs,4,'b'),'function call')
            rgs = ranges("@a 3 @b '5'")
            compare(inc(rgs,0,'@'),'punct function call')
            compare(inc(rgs,1,'a'),'function call')
            rgs = ranges("fff 1")
            compare(inc(rgs,0,"fff"),'function call')
            rgs = ranges("f 'a'")
            compare(inc(rgs,0,"f"),'function call')
            rgs = ranges("ff 'b'")
            compare(inc(rgs,0,"ff"),'function call')
            rgs = ranges("ffff -1")
            compare(inc(rgs,0,"ffff"),'function call')
            rgs = ranges("f [1]")
            compare(inc(rgs,0,"f"),'function call')
            rgs = ranges("fffff {1}")
            compare(inc(rgs,0,"fffff"),'function call')
            rgs = ranges("i ++a")
            compare(inc(rgs,0,'i'),'function call')
            rgs = ranges("i +4")
            compare(inc(rgs,0,'i'),'function call')
            rgs = ranges("i -4")
            compare(inc(rgs,0,'i'),'function call')
            rgs = ranges("pos= (item, p) -> ")
            compare(inc(rgs,0,"pos"),'function')
            rgs = ranges("i != false")
            compare(inc(rgs,0,'i'),'text')
            rgs = ranges("i += 1")
            compare(inc(rgs,0,'i'),'text')
            rgs = ranges("i -= 1")
            compare(inc(rgs,0,'i'),'text')
            rgs = ranges("i *= 1")
            compare(inc(rgs,0,'i'),'text')
            rgs = ranges("i /= 1")
            compare(inc(rgs,0,'i'),'text')
            rgs = ranges("i ? false")
            compare(inc(rgs,0,'i'),'text')
            rgs = ranges("i < 3")
            compare(inc(rgs,0,'i'),'text')
            rgs = ranges("i > 3")
            compare(inc(rgs,0,'i'),'text')
            rgs = ranges("i + 3")
            compare(inc(rgs,0,'i'),'text')
            rgs = ranges("i - 3")
            compare(inc(rgs,0,'i'),'text')
            rgs = ranges("i * 3")
            compare(inc(rgs,0,'i'),'text')
            rgs = ranges("i / 3")
            compare(inc(rgs,0,'i'),'text')
            rgs = ranges("i % 3")
            compare(inc(rgs,0,'i'),'text')
            rgs = ranges("i = 3")
            compare(inc(rgs,0,'i'),'text')
            rgs = ranges("i == 3")
            compare(inc(rgs,0,'i'),'text')
        })
    })
    section("kode", function ()
    {
        lang('kode')
        rgs = ranges(" @: ->")
        compare(inc(rgs,1,"@"),'method')
        compare(inc(rgs,2,":"),'punct method')
        compare(inc(rgs,4,"->"),'punct function tail ligature')
        rgs = ranges(" @:->a")
        compare(inc(rgs,1,"@"),'method')
        compare(inc(rgs,2,":"),'punct method')
        compare(inc(rgs,3,"->"),'punct function tail ligature')
        rgs = ranges("empty noon valid ")
        compare(inc(rgs,0,"empty"),'keyword')
        compare(inc(rgs,6,"noon"),'keyword')
        compare(inc(rgs,11,"valid"),'keyword')
        rgs = ranges("min max clamp first last")
        compare(inc(rgs,0,"min"),'keyword')
        compare(inc(rgs,4,"max"),'keyword')
        compare(inc(rgs,14,"first"),'keyword')
        compare(inc(rgs,20,"last"),'keyword')
        rgs = ranges("▸ some text")
        compare(inc(rgs,0,"▸"),'punct keyword')
        compare(inc(rgs,2,"some"),'section')
        compare(inc(rgs,7,"text"),'section')
        rgs = ranges("    ▸ some text")
        compare(inc(rgs,4,"▸"),'punct keyword')
        compare(inc(rgs,6,"some"),'section')
        compare(inc(rgs,11,"text"),'section')
        rgs = ranges("    some ▸ test")
        compare(inc(rgs,9,"▸"),'punct keyword')
        compare(inc(rgs,11,"test"),'text')
        rgs = ranges("➜")
        compare(inc(rgs,0,"➜"),'punct keyword')
        rgs = ranges("a is str")
        compare(inc(rgs,2,"is"),'keyword')
        compare(inc(rgs,5,"str"),'keyword')
        rgs = ranges("a is num")
        compare(inc(rgs,5,"num"),'keyword')
        rgs = ranges("a is obj")
        compare(inc(rgs,5,"obj"),'keyword')
        rgs = ranges("a is arr")
        compare(inc(rgs,5,"arr"),'keyword')
        rgs = ranges("a is func")
        compare(inc(rgs,5,"func"),'keyword')
        rgs = ranges("a is elem")
        compare(inc(rgs,5,"elem"),'keyword')
        section("dir", function ()
        {
            rgs = ranges("◆dir")
            compare(inc(rgs,0,"◆"),'punct keyword')
            compare(inc(rgs,1,"dir"),'keyword')
            rgs = ranges("◆Dir")
            compare(inc(rgs,0,"◆"),'punct')
            compare(inc(rgs,1,"Dir"),'text')
        })
        section("file", function ()
        {
            rgs = ranges("◆file")
            compare(inc(rgs,0,"◆"),'punct keyword')
            compare(inc(rgs,1,"file"),'keyword')
            rgs = ranges("◆files")
            compare(inc(rgs,0,"◆"),'punct')
            compare(inc(rgs,1,"files"),'text')
        })
        section("use", function ()
        {
            rgs = ranges("use fs")
            compare(inc(rgs,0,"use"),'keyword require')
            compare(inc(rgs,4,"fs"),'require')
            rgs = ranges("use ../mod")
            compare(inc(rgs,0,"use"),'keyword require')
            compare(inc(rgs,4,"."),'punct require')
            compare(inc(rgs,5,"."),'punct require')
            compare(inc(rgs,6,"/"),'punct require')
            compare(inc(rgs,7,"mod"),'text require string')
            rgs = ranges("use ./dir/mod")
            compare(inc(rgs,0,"use"),'keyword require')
            compare(inc(rgs,4,"."),'punct require')
            compare(inc(rgs,5,"/"),'punct require')
            compare(inc(rgs,6,"dir"),'text require')
            compare(inc(rgs,9,"/"),'punct require')
            compare(inc(rgs,10,"mod"),'text require string')
            rgs = ranges("use: (n) ->")
            compare(inc(rgs,0,"use"),'method')
            compare(inc(rgs,3,":"),'punct method')
            rgs = ranges("use ◆ A bC d")
            compare(inc(rgs,0,"use"),'keyword require')
            compare(inc(rgs,4,"◆"),'punct require')
            compare(inc(rgs,6,"A"),'text require string')
            compare(inc(rgs,8,"bC"),'text require string')
            compare(inc(rgs,11,"d"),'text require string')
        })
        section("no comma", function ()
        {
            lang('kode')
            rgs = ranges("[1 'x' a:1 c:d]")
            compare(inc(rgs,1,"1"),'number')
            compare(inc(rgs,4,"x"),'string single')
            compare(inc(rgs,7,"a"),'dictionary key')
            compare(inc(rgs,11,"c"),'dictionary key')
        })
        section("method", function ()
        {
            lang('kode')
            rgs = ranges(" a: =>")
            compare(inc(rgs,1,"a"),'method')
            compare(inc(rgs,2,":"),'punct method')
            compare(inc(rgs,4,"=>"),'punct function bound tail ligature')
            rgs = ranges(" a: ->")
            compare(inc(rgs,1,"a"),'method')
            compare(inc(rgs,2,":"),'punct method')
            compare(inc(rgs,4,"->"),'punct function tail ligature')
            rgs = ranges("mthd:  (arg)    => @member memarg")
            compare(inc(rgs,0,'mthd'),'method')
            compare(inc(rgs,4,':'),'punct method')
            compare(inc(rgs,16,'=>'),'punct function bound tail ligature')
            rgs = ranges("@mthd: (arg) ->")
            compare(inc(rgs,0,'@'),'punct method class')
            compare(inc(rgs,1,'mthd'),'method class')
        })
        section("return", function ()
        {
            lang('kode')
            rgs = ranges("⮐ 1")
            compare(inc(rgs,0,"⮐"),'punct keyword return')
        })
    })
    section("js", function ()
    {
        lang('js')
        rgs = ranges("obj.prop.call(1);")
        compare(inc(rgs,0,'obj'),'obj')
        compare(inc(rgs,4,'prop'),'property')
        compare(inc(rgs,9,'call'),'function call')
        rgs = ranges("func = function() {")
        compare(inc(rgs,0,'func'),'function')
        compare(inc(rgs,7,'function'),'keyword function')
        rgs = ranges("obj.value = obj.another.value")
        compare(inc(rgs,0,"obj"),'obj')
        compare(inc(rgs,4,"value"),'property')
        compare(inc(rgs,12,"obj"),'obj')
        compare(inc(rgs,16,"another"),'property')
        compare(inc(rgs,24,"value"),'property')
        rgs = ranges("a(2);")
        compare(inc(rgs,0,'a'),'function call')
        rgs = ranges("//# sourceMappingURL=data:")
        compare(inc(rgs,0,"/"),'punct comment')
        compare(inc(rgs,1,"/"),'punct comment')
        compare(inc(rgs,2,"#"),'comment')
    })
    section("json", function ()
    {
        lang('json')
        rgs = ranges(`{ "A Z": 1 }`)
        compare(inc(rgs,2,'"'),'punct dictionary')
        compare(inc(rgs,3,'A'),'dictionary key')
        compare(inc(rgs,5,'Z'),'dictionary key')
        compare(inc(rgs,6,'"'),'punct dictionary')
        compare(inc(rgs,7,':'),'punct dictionary')
        rgs = ranges('"a": "http://domain.com"')
        inc(rgs,6,'http','url p    ▸ rotocol')
        compare(inc(rgs,10,':'),'punct url')
        compare(inc(rgs,11,'/'),'punct url')
        compare(inc(rgs,12,'/'),'punct url')
        compare(inc(rgs,13,'domain'),'url domain')
        compare(inc(rgs,19,'.'),'punct url tld')
        compare(inc(rgs,20,'com'),'url tld')
        rgs = ranges('"http://domain.com/dir/page.html"')
        compare(inc(rgs,1,'http'),'url protocol')
        compare(inc(rgs,5,':'),'punct url')
        compare(inc(rgs,6,'/'),'punct url')
        compare(inc(rgs,7,'/'),'punct url')
        compare(inc(rgs,8,'domain'),'url domain')
        compare(inc(rgs,14,'.'),'punct url tld')
        compare(inc(rgs,15,'com'),'url tld')
        compare(inc(rgs,18,'/'),'punct dir')
        rgs = ranges('"file.coffee"')
        compare(inc(rgs,1,'file'),'coffee file')
        compare(inc(rgs,5,'.'),'punct coffee')
        compare(inc(rgs,6,'coffee'),'coffee ext')
        rgs = ranges('"/some/path"')
        compare(inc(rgs,2,'some'),'text dir')
        compare(inc(rgs,6,'/'),'punct dir')
        compare(inc(rgs,7,'path'),'text file')
        rgs = ranges('"/some\\path/file.txt:10"')
        compare(inc(rgs,0,'"'),'punct string double')
        compare(inc(rgs,1,'/'),'punct dir')
        compare(inc(rgs,2,'some'),'text dir')
        compare(inc(rgs,16,'.'),'punct txt')
        compare(inc(rgs,20,':'),'string double')
        compare(inc(rgs,23,'"'),'punct string double')
        rgs = ranges('"./node_modules/.bin/mocha"')
        compare(inc(rgs,1,'.'),'text dir')
        compare(inc(rgs,2,'/'),'punct dir')
        compare(inc(rgs,3,'node_modules'),'text dir')
        compare(inc(rgs,15,'/'),'punct dir')
        compare(inc(rgs,16,'.'),'text dir')
        compare(inc(rgs,17,'bin'),'text dir')
        compare(inc(rgs,20,'/'),'punct dir')
        compare(inc(rgs,21,'mocha'),'text file')
        rgs = ranges('"66.70.0"')
        compare(inc(rgs,1,"66"),'semver')
        compare(inc(rgs,3,"."),'punct semver')
        compare(inc(rgs,4,"70"),'semver')
        compare(inc(rgs,6,"."),'punct semver')
        compare(inc(rgs,7,"0"),'semver')
        rgs = ranges('"^0.7.1"')
        compare(inc(rgs,1,"^"),'punct semver')
        compare(inc(rgs,2,"0"),'semver')
        compare(inc(rgs,4,"7"),'semver')
        compare(inc(rgs,6,"1"),'semver')
        rgs = ranges('"^1.0.0-alpha.12"')
        compare(inc(rgs,2,"1"),'semver')
        compare(inc(rgs,4,"0"),'semver')
        compare(inc(rgs,6,"0"),'semver')
        rgs = ranges('">=6.7.8"')
        compare(inc(rgs,1,">"),'punct semver')
        compare(inc(rgs,2,"="),'punct semver')
        compare(inc(rgs,3,"6"),'semver')
        compare(inc(rgs,4,"."),'punct semver')
        compare(inc(rgs,5,"7"),'semver')
        compare(inc(rgs,6,"."),'punct semver')
        compare(inc(rgs,7,"8"),'semver')
    })
    section("regexp", function ()
    {
        lang('coffee')
        rgs = ranges("r=/a/")
        compare(inc(rgs,2,'/'),'punct regexp start')
        compare(inc(rgs,3,'a'),'text regexp')
        compare(inc(rgs,4,'/'),'punct regexp end')
        rgs = ranges("/(a|.*|\s\d\w\S\W$|^\s+)/")
        compare(inc(rgs,0,'/'),'punct regexp start')
        compare(inc(rgs,2,'a'),'text regexp')
        rgs = ranges("/^#include/")
        compare(inc(rgs,0,'/'),'punct regexp start')
        compare(inc(rgs,2,"#"),'punct regexp')
        compare(inc(rgs,3,"include"),'text regexp')
        rgs = ranges("/\\'hello\\'/ ")
        compare(inc(rgs,0,'/'),'punct regexp start')
        compare(inc(rgs,1,"\\"),'punct escape regexp')
        compare(inc(rgs,2,"'"),'punct regexp')
        compare(inc(rgs,3,"hello"),'text regexp')
        rgs = ranges("f a /b - c/gi")
        compare(inc(rgs,4,'/'),'punct regexp start')
        compare(inc(rgs,5,'b'),'text regexp')
        compare(inc(rgs,10,'/'),'punct regexp end')
        rgs = ranges("w=l.split /[\\s\\/]/ ; bla")
        compare(inc(rgs,10,'/'),'punct regexp start')
        compare(inc(rgs,14,'\\'),'punct escape regexp')
        compare(inc(rgs,17,'/'),'punct regexp end')
        compare(inc(rgs,19,';'),'punct minor')
        rgs = ranges("a = 1 / 2")
        compare(inc(rgs,6,'/'),'punct')
        compare(inc(rgs,8,'2'),'number')
        rgs = ranges("(1+1) / 2")
        compare(inc(rgs,6,'/'),'punct')
        compare(inc(rgs,8,'2'),'number')
        rgs = ranges("a[10] / 2")
        compare(inc(rgs,6,'/'),'punct')
        compare(inc(rgs,8,'2'),'number')
        rgs = ranges("if / aa /.test s")
        compare(inc(rgs,3,'/'),'punct regexp start')
        compare(inc(rgs,8,'/'),'punct regexp end')
        compare(inc(rgs,9,'.'),'punct property')
        compare(inc(rgs,10,'test'),'function call')
        compare(inc(rgs,15,'s'),'text')
        rgs = ranges("if / 😡 /.test s")
        compare(inc(rgs,3,'/'),'punct regexp start')
        compare(inc(rgs,8,'/'),'punct regexp end')
        compare(inc(rgs,9,'.'),'punct property')
        compare(inc(rgs,10,'test'),'function call')
        compare(inc(rgs,15,'s'),'text')
    })
    section("triple regexp", function ()
    {
        lang('coffee')
        rgs = ranges("///a///,b")
        compare(inc(rgs,0,"/"),'punct regexp triple')
        compare(inc(rgs,1,"/"),'punct regexp triple')
        compare(inc(rgs,2,"/"),'punct regexp triple')
        compare(inc(rgs,3,"a"),'text regexp triple')
        compare(inc(rgs,4,"/"),'punct regexp triple')
        compare(inc(rgs,5,"/"),'punct regexp triple')
        compare(inc(rgs,6,"/"),'punct regexp triple')
        compare(inc(rgs,8,"b"),'text')
        dss = dissect("///\na\n///")
        compare(inc(dss[0],0,"/"),'punct regexp triple')
        compare(inc(dss[0],1,"/"),'punct regexp triple')
        compare(inc(dss[0],2,"/"),'punct regexp triple')
        compare(inc(dss[1],0,"a"),'text regexp triple')
        compare(inc(dss[2],0,"/"),'punct regexp triple')
        compare(inc(dss[2],1,"/"),'punct regexp triple')
        compare(inc(dss[2],2,"/"),'punct regexp triple')
        dss = dissect(`///
    ([\\\\?]) # comment
///, a`)
        compare(inc(dss[0],0,"/"),'punct regexp triple')
        compare(inc(dss[0],1,"/"),'punct regexp triple')
        compare(inc(dss[0],2,"/"),'punct regexp triple')
        compare(inc(dss[1],4,"("),'punct minor regexp triple')
        compare(inc(dss[1],6,"\\"),'punct escape regexp triple')
        compare(inc(dss[1],12,"#"),'punct comment')
        compare(inc(dss[1],14,"comment"),'comment')
        compare(inc(dss[2],0,"/"),'punct regexp triple')
        compare(inc(dss[2],1,"/"),'punct regexp triple')
        compare(inc(dss[2],2,"/"),'punct regexp triple')
        compare(inc(dss[2],5,"a"),'text')
        dss = dissect(`arr = [ ///a\#{b}///
        key: 'value'
      ]`)
        compare(inc(dss[1],8,'key'),'dictionary key')
    })
    section("no regexp", function ()
    {
        lang('coffee')
        rgs = ranges('a / b - c / d')
        compare(inc(rgs,2,'/'),'punct')
        rgs = ranges('f a/b, c/d')
        compare(inc(rgs,3,'/'),'punct')
        rgs = ranges("m = '/'")
        compare(inc(rgs,5,'/'),'string single')
        rgs = ranges("m a, '/''/'")
        compare(inc(rgs,6,'/'),'string single')
        rgs = ranges("s = '/some\\path/file.txt:12'")
        compare(inc(rgs,5,'/'),'string single')
        compare(inc(rgs,15,'/'),'string single')
        rgs = ranges("num /= 10")
        compare(inc(rgs,4,'/'),'punct')
        compare(inc(rgs,7,'10'),'number')
        rgs = ranges("4 / 2 / 1")
        compare(inc(rgs,2,'/'),'punct')
        compare(inc(rgs,6,'/'),'punct')
        rgs = ranges("4/2/1")
        compare(inc(rgs,1,'/'),'punct')
        compare(inc(rgs,3,'/'),'punct')
        rgs = ranges("4/ 2 / 1")
        compare(inc(rgs,1,'/'),'punct')
        compare(inc(rgs,5,'/'),'punct')
        rgs = ranges("4 /2 / 1")
        compare(inc(rgs,2,'/'),'punct')
        compare(inc(rgs,5,'/'),'punct')
        rgs = ranges("4 / 2/ 1")
        compare(inc(rgs,2,'/'),'punct')
        compare(inc(rgs,5,'/'),'punct')
        rgs = ranges("4 / 2 /1")
        compare(inc(rgs,2,'/'),'punct')
        compare(inc(rgs,6,'/'),'punct')
        rgs = ranges("4 /2/ 1")
        compare(inc(rgs,2,'/'),'punct')
        compare(inc(rgs,4,'/'),'punct')
    })
    section("md", function ()
    {
        lang('md')
        rgs = ranges("**bold**")
        compare(inc(rgs,0,'*'),'punct bold')
        compare(inc(rgs,1,'*'),'punct bold')
        compare(inc(rgs,2,'bold'),'text bold')
        compare(inc(rgs,6,'*'),'punct bold')
        compare(inc(rgs,7,'*'),'punct bold')
        rgs = ranges(",**b**,")
        compare(inc(rgs,1,'*'),'punct bold')
        compare(inc(rgs,3,'b'),'text bold')
        compare(inc(rgs,4,'*'),'punct bold')
        rgs = ranges("*it lic*")
        compare(inc(rgs,0,'*'),'punct italic')
        compare(inc(rgs,1,'it'),'text italic')
        compare(inc(rgs,4,'lic'),'text italic')
        compare(inc(rgs,7,'*'),'punct italic')
        rgs = ranges("*italic*")
        compare(inc(rgs,0,'*'),'punct italic')
        compare(inc(rgs,1,'italic'),'text italic')
        compare(inc(rgs,7,'*'),'punct italic')
        rgs = ranges("*`italic code`*")
        compare(inc(rgs,0,'*'),'punct italic')
        compare(inc(rgs,1,'`'),'punct italic code')
        compare(inc(rgs,2,'italic'),'text italic code')
        compare(inc(rgs,9,'code'),'text italic code')
        compare(inc(rgs,14,'*'),'punct italic')
        rgs = ranges("it's good")
        compare(inc(rgs,0,'it'),'text')
        compare(inc(rgs,2,"'"),'punct')
        compare(inc(rgs,3,'s'),'text')
        rgs = ranges("if is empty in then")
        compare(inc(rgs,0,'if'),'text')
        compare(inc(rgs,3,'is'),'text')
        compare(inc(rgs,6,'empty'),'text')
        compare(inc(rgs,12,'in'),'text')
        compare(inc(rgs,15,'then'),'text')
        rgs = ranges('text files. bla')
        compare(inc(rgs,0,'text'),'text')
        compare(inc(rgs,10,'.'),'punct')
        rgs = ranges('..bla')
        compare(inc(rgs,0,'.'),'punct')
        compare(inc(rgs,1,'.'),'punct')
        rgs = ranges('```coffeescript')
        compare(inc(rgs,0,'`'),'punct code triple')
        compare(inc(rgs,3,'coffeescript'),'comment')
        rgs = ranges("- li")
        compare(inc(rgs,0,'-'),'punct li1 marker')
        compare(inc(rgs,2,'li'),'text li1')
        rgs = ranges("    - **bold**")
        compare(inc(rgs,4,'-'),'punct li2 marker')
        compare(inc(rgs,8,'bold'),'text li2 bold')
        rgs = ranges("        - **bold**")
        compare(inc(rgs,8,'-'),'punct li3 marker')
        compare(inc(rgs,12,'bold'),'text li3 bold')
        rgs = ranges("        * **bold**")
        compare(inc(rgs,8,'*'),'punct li3 marker')
        compare(inc(rgs,12,'bold'),'text li3 bold')
        dss = dissect(`- li1
text`)
        compare(inc(dss[0],0,'-'),'punct li1 marker')
        compare(inc(dss[1],0,'text'),'text')
        dss = dissect(`# h1
## h2
### h3
#### h4
##### h5`)
        compare(inc(dss[0],0,"#"),'punct h1')
        compare(inc(dss[0],2,"h1"),'text h1')
        compare(inc(dss[1],0,"#"),'punct h2')
        compare(inc(dss[1],3,"h2"),'text h2')
        compare(inc(dss[2],0,"#"),'punct h3')
        compare(inc(dss[2],4,"h3"),'text h3')
        compare(inc(dss[3],0,"#"),'punct h4')
        compare(inc(dss[3],5,"h4"),'text h4')
        compare(inc(dss[4],0,"#"),'punct h5')
        compare(inc(dss[4],6,"h5"),'text h5')
        dss = dissect(`\`\`\`js
\`\`\``)
        compare(inc(dss[1],0,'`'),'punct code triple')
    })
    section("html", function ()
    {
        lang('html')
        rgs = ranges("</div>")
        compare(inc(rgs,0,"<"),'punct keyword')
        compare(inc(rgs,1,"/"),'punct keyword')
        compare(inc(rgs,2,"div"),'keyword')
        compare(inc(rgs,5,">"),'punct keyword')
        rgs = ranges("<div>")
        compare(inc(rgs,0,"<"),'punct keyword')
        compare(inc(rgs,1,"div"),'keyword')
        compare(inc(rgs,4,">"),'punct keyword')
    })
    section("styl", function ()
    {
        lang('styl')
        rgs = ranges("1em")
        compare(inc(rgs,0,"1em"),'number')
        rgs = ranges("1ex")
        compare(inc(rgs,0,"1ex"),'number')
        rgs = ranges("1px")
        compare(inc(rgs,0,"1px"),'number')
        rgs = ranges("1s")
        compare(inc(rgs,0,"1s"),'number')
        rgs = ranges("1.0")
        compare(inc(rgs,0,"1"),'number float')
        compare(inc(rgs,1,"."),'punct number float')
        compare(inc(rgs,2,"0"),'number float')
        rgs = ranges(".clss")
        compare(inc(rgs,0,"."),'punct class')
        compare(inc(rgs,1,"clss"),'class')
        rgs = ranges("#id")
        compare(inc(rgs,0,"#"),'punct function')
        compare(inc(rgs,1,"id"),'function')
        rgs = ranges("#id-foo-bar")
        compare(inc(rgs,0,"#"),'punct function')
        compare(inc(rgs,1,"id"),'function')
        compare(inc(rgs,3,"-"),'punct function')
        compare(inc(rgs,4,"foo"),'function')
        compare(inc(rgs,7,"-"),'punct function')
        compare(inc(rgs,8,"bar"),'function')
        rgs = ranges(".clss-foo-bar")
        compare(inc(rgs,0,"."),'punct class')
        compare(inc(rgs,1,"clss"),'class')
        compare(inc(rgs,5,"-"),'punct class')
        compare(inc(rgs,6,"foo"),'class')
        compare(inc(rgs,9,"-"),'punct class')
        compare(inc(rgs,10,"bar"),'class')
        rgs = ranges("#666")
        compare(inc(rgs,0,"#"),'punct number hex')
        compare(inc(rgs,1,"666"),'number hex')
        rgs = ranges("#abc")
        compare(inc(rgs,0,"#"),'punct number hex')
        compare(inc(rgs,1,"abc"),'number hex')
        rgs = ranges("#f0f0f0")
        compare(inc(rgs,0,"#"),'punct number hex')
        compare(inc(rgs,1,"f0f0f0"),'number hex')
    })
    section("css", function ()
    {
        lang('css')
        rgs = ranges("0.5")
        compare(inc(rgs,0,"0"),'number float')
        compare(inc(rgs,1,"."),'punct number float')
        compare(inc(rgs,2,"5"),'number float')
    })
    section("cpp", function ()
    {
        lang('cpp')
        rgs = ranges("#include")
        compare(inc(rgs,0,"#"),'punct define')
        compare(inc(rgs,1,"include"),'define')
        rgs = ranges("#if")
        compare(inc(rgs,0,"#"),'punct define')
        compare(inc(rgs,1,"if"),'define')
        rgs = ranges("#  if")
        compare(inc(rgs,0,"#"),'punct define')
        compare(inc(rgs,3,"if"),'define')
        rgs = ranges("if (true) {} else {}")
        compare(inc(rgs,0,"if"),'keyword')
        compare(inc(rgs,4,"true"),'keyword')
        compare(inc(rgs,13,"else"),'keyword')
        rgs = ranges("1.0f")
        compare(inc(rgs,0,"1"),'number float')
        compare(inc(rgs,1,"."),'punct number float')
        compare(inc(rgs,2,"0f"),'number float')
        rgs = ranges("0.0000f")
        compare(inc(rgs,2,"0000f"),'number float')
        rgs = ranges("obj.value = obj.another.value;")
        compare(inc(rgs,0,"obj"),'obj')
        compare(inc(rgs,4,"value"),'property')
        compare(inc(rgs,12,"obj"),'obj')
        compare(inc(rgs,16,"another"),'property')
        compare(inc(rgs,24,"value"),'property')
        rgs = ranges("Cast<targ>")
        compare(inc(rgs,4,'<'),'punct template')
        compare(inc(rgs,5,'targ'),'template')
        compare(inc(rgs,9,'>'),'punct template')
        rgs = ranges("TMap<FGrid, FRoute>")
        compare(inc(rgs,0,'TMap'),'keyword type')
        compare(inc(rgs,4,'<'),'punct template')
        compare(inc(rgs,5,'FGrid'),'template')
        compare(inc(rgs,10,','),'punct template')
        compare(inc(rgs,12,'FRoute'),'template')
        compare(inc(rgs,18,'>'),'punct template')
    })
    section("sh", function ()
    {
        lang('sh')
        rgs = ranges("dir/path/with/dashes/file.txt")
        compare(inc(rgs,0,'dir'),'text dir')
        compare(inc(rgs,4,'path'),'text dir')
        compare(inc(rgs,9,'with'),'text dir')
        compare(inc(rgs,14,'dashes'),'text dir')
        rgs = ranges("prg --arg1 -arg2")
        compare(inc(rgs,4,'-'),'punct argument')
        compare(inc(rgs,5,'-'),'punct argument')
        compare(inc(rgs,6,'arg1'),'argument')
        compare(inc(rgs,11,'-'),'punct argument')
        compare(inc(rgs,12,'arg2'),'argument')
        rgs = ranges("cd ~")
        compare(inc(rgs,3,'~'),'text dir')
        rgs = ranges("~/home")
        compare(inc(rgs,0,'~'),'text dir')
        compare(inc(rgs,1,'/'),'punct dir')
        compare(inc(rgs,2,'home'),'text file')
    })
    section("log", function ()
    {
        lang('log')
        rgs = ranges("http://domain.com")
        compare(inc(rgs,0,'http'),'url protocol')
        compare(inc(rgs,4,':'),'punct url')
        compare(inc(rgs,5,'/'),'punct url')
        compare(inc(rgs,6,'/'),'punct url')
        compare(inc(rgs,7,'domain'),'url domain')
        compare(inc(rgs,13,'.'),'punct url tld')
        compare(inc(rgs,14,'com'),'url tld')
        rgs = ranges("file.coffee")
        compare(inc(rgs,0,'file'),'coffee file')
        compare(inc(rgs,4,'.'),'punct coffee')
        compare(inc(rgs,5,'coffee'),'coffee ext')
        rgs = ranges("/some/path")
        compare(inc(rgs,1,'some'),'text dir')
        compare(inc(rgs,5,'/'),'punct dir')
        rgs = ranges("key: value")
        compare(inc(rgs,0,'key'),'dictionary key')
        compare(inc(rgs,3,':'),'punct dictionary')
    })
}
toExport["ranges"]._section_ = true
toExport["parse"] = function ()
{
    section("comment", function ()
    {
        lang('coffee')
        compare(parse("##"),[{chunks:[{start:0,length:1,match:"#",turd:"##",clss:'punct comment'},{start:1,length:1,match:"#",clss:'comment'}],chars:2,index:0,number:1,ext:'coffee'}])
        compare(parse(",#a"),[{chunks:[{start:0,length:1,match:",",turd:",#",clss:'punct minor'},{start:1,length:1,match:"#",clss:'punct comment'},{start:2,length:1,match:"a",clss:'comment'}],chars:3,index:0,number:1,ext:'coffee'}])
    })
    section("function", function ()
    {
        compare(parse('->'),[{chunks:[{start:0,length:1,match:'-',turd:'->',clss:'punct function tail'},{start:1,length:1,match:'>',clss:'punct function head'}],chars:2,index:0,number:1,ext:'coffee'}])
        compare(parse('=>'),[{chunks:[{start:0,length:1,match:'=',turd:'=>',clss:'punct function bound tail'},{start:1,length:1,match:'>',clss:'punct function bound head'}],chars:2,index:0,number:1,ext:'coffee'}])
        compare(parse('f=->1'),[{chunks:[{start:0,length:1,match:'f',clss:'function'},{start:1,length:1,match:'=',turd:'=->',clss:'punct function'},{start:2,length:1,match:'-',turd:'->',clss:'punct function tail'},{start:3,length:1,match:'>',clss:'punct function head'},{start:4,length:1,match:'1',clss:'number'}],chars:5,index:0,number:1,ext:'coffee'}])
    })
    section("minimal", function ()
    {
        compare(parse('1'),[{chunks:[{start:0,length:1,match:'1',clss:'number'}],chars:1,index:0,number:1,ext:'coffee'}])
        compare(parse('a'),[{chunks:[{start:0,length:1,match:'a',clss:'text'}],chars:1,index:0,number:1,ext:'coffee'}])
        compare(parse('.'),[{chunks:[{start:0,length:1,match:'.',clss:'punct'}],chars:1,index:0,number:1,ext:'coffee'}])
        compare(parse('1.a'),[{chunks:[{start:0,length:1,match:'1',clss:'number'},{start:1,length:1,match:'.',clss:'punct property'},{start:2,length:1,match:'a',clss:'property'}],chars:3,index:0,number:1,ext:'coffee'}])
        compare(parse('++a'),[{chunks:[{start:0,length:1,match:'+',turd:'++',clss:'punct'},{start:1,length:1,match:'+',clss:'punct'},{start:2,length:1,match:'a',clss:'text'}],chars:3,index:0,number:1,ext:'coffee'}])
    })
    section("space", function ()
    {
        b = parse("x")
        compare(b[0].chunks[0].start,0)
        b = parse(" xx")
        compare(b[0].chunks[0].start,1)
        b = parse("    xxx")
        compare(b[0].chunks[0].start,4)
        b = parse("    x 1  , ")
        compare(b[0].chunks[0].start,4)
        compare(b[0].chunks[1].start,6)
        compare(b[0].chunks[2].start,9)
    })
}
toExport["parse"]._section_ = true
toExport["globalize"] = function ()
{
    section("enable", function ()
    {
        kolor.klor.globalize()
        compare(global['red'],kolor.klor.red)
        compare(global['red']('txt'),kolor.klor.red('txt'))
    })
    section("disable", function ()
    {
        kolor.klor.globalize(false)
        compare(global['red']('txt'),'txt')
    })
}
toExport["globalize"]._section_ = true
toExport._test_ = true
export default toExport
