###
 0000000   0000000   000      000      
000       000   000  000      000      
000       000000000  000      000      
000       000   000  000      000      
 0000000  000   000  0000000  0000000  
###

use ./utils ▪ kc ke

▸ call
    
    ▸ calls

        kc  'a(b)'              ▸ 'a(b)'
        kc  'a(b,c)'            ▸ 'a(b,c)'
        kc  'a(1,null,"2")'     ▸ 'a(1,null,"2")'
        kc  'a[1](b)'           ▸ 'a[1](b)'
        kc  "f 'b', (a) ->"     ▸ "f('b',function (a)\n{})"
        kc  "a('1' 2 3.4 true false null undefined NaN Infinity)" ▸
            "a('1',2,3.4,true,false,null,undefined,NaN,Infinity)"

        kc  "cb not err"        ▸ "cb(!err)"
            
        kc  """
            a b:c[1], d:2
            """ ▸
            """
            a({b:c[1],d:2})
            """

        kc  """
            a b:c[2], d:3
            4
            """ ▸
            """
            a({b:c[2],d:3})
            4
            """

        kc  """
            a '1'
            b  2
            c  3.4
            d  true
            """ ▸
            """
            a('1')
            b(2)
            c(3.4)
            d(true)
            """

        kc  """
            a b 1
            c d 2
            """ ▸
            """
            a(b(1))
            c(d(2))
            """

        kc  "a 'b' -> c" ▸
            """
            a('b',function ()
            {
                return c
            })
            """

        kc  'l = pat.map ->'    ▸   'l = pat.map(function ()\n{})'

        kc  """
            ((a) -> 1)
            """ ▸
            """
            ;(function (a)
            {
                return 1
            })
            """

        kc  """
            l = a (i) -> 0
            """ ▸
            """
            l = a(function (i)
            {
                return 0
            })
            """

        kc  """
            l = timer ((i) -> 1)
            """ ▸
            """
            l = timer((function (i)
            {
                return 1
            }))
            """

        kc  """
            l = timer ((i) -> i), y
            """ ▸
            """
            l = timer((function (i)
            {
                return i
            }),y)
            """

        kc  """
            a.b c:2
            x = y
            """ ▸
            """
            a.b({c:2})
            x = y
            """

    ▸ obj, func
      
        kc  """
            g h:1, -> 2
            """ ▸
            """
            g({h:1},function ()
            {
                return 2
            })
            """

        kc  """
            j k:1, (l) -> 3
            """ ▸
            """
            j({k:1},function (l)
            {
                return 3
            })
            """
            
    ▸ if
    
        kc  """
            a if 1 ➜ 2
                 2 ➜ 3
                   ➜ 4
            """ ▸
            """
            a(1 ? 2 : 2 ? 3 : 4)
            """

        kc  """
            a if 1 ➜ 2
                 2 ➜ 1+1;3
                   ➜ 4
            """ ▸
            """
            a(((function ()
            {
                if (1)
                {
                    return 2
                }
                else if (2)
                {
                    1 + 1
                    return 3
                }
                else
                {
                    return 4
                }
            }).bind(this))())
            """
            
    ▸ switch
    
        kc  """
            a switch x
                 2 ➜ 3
                   ➜ 4
            """ ▸
            """
            a(((function ()
            {
                switch (x)
                {
                    case 2:
                        return 3
            
                    default:
                        return 4
                }
            
            }).bind(this))())
            """
            
    # 000       0000000   00     00  0000000    0000000     0000000   
    # 000      000   000  000   000  000   000  000   000  000   000  
    # 000      000000000  000000000  0000000    000   000  000000000  
    # 000      000   000  000 0 000  000   000  000   000  000   000  
    # 0000000  000   000  000   000  0000000    0000000    000   000  
    
    ▸ lambda
            
        kc  "a = (-> 1)()" ▸
            """
            a = (function ()
            {
                return 1
            })()
            """

        kc  """
            a = (->
                1)()
            """ ▸
            """
            a = (function ()
            {
                return 1
            })()
            """
            
    # 00000000    0000000   00000000   00000000  000   000   0000000  
    # 000   000  000   000  000   000  000       0000  000  000       
    # 00000000   000000000  0000000    0000000   000 0 000  0000000   
    # 000        000   000  000   000  000       000  0000       000  
    # 000        000   000  000   000  00000000  000   000  0000000   
    
    ▸ parens
            
        kc  """
            a(
                '1'
                2
                3.4
                true
                [
                    null
                    undefined
                ]
            )
            """ ▸
            """
            a('1',2,3.4,true,[null,undefined])
            """
            
    # 0000000    000       0000000    0000000  000   000  
    # 000   000  000      000   000  000       000  000   
    # 0000000    000      000   000  000       0000000    
    # 000   000  000      000   000  000       000  000   
    # 0000000    0000000   0000000    0000000  000   000  
    
    ▸ block            

        kc  """
            a
                b
                    3
            c
                d
                    4
            """ ▸
            """
            a(b(3))
            c(d(4))
            """

        kc  """
            a
                b
                1
            c
                d
                2
            """ ▸
            """
            a(b,1)
            c(d,2)
            """
            
        kc  """
            a = x
                c:1
                d:2
            """ ▸
            """
            a = x({c:1,d:2})
            """

        kc  """
            if false
                a = x
                    c:1
                    d:2
            """ ▸
            """
            if (false)
            {
                a = x({c:1,d:2})
            }
            """
            
        kc  """
            f = ->
                a = x
                    c:1
                    d:2
            """ ▸
            """
            
            f = function ()
            {
                var a
            
                return a = x({c:1,d:2})
            }
            """

        kc  """
            d = k:1
                v: x
                    c:1
                    d:2
            """ ▸
            """
            d = {k:1,v:x({c:1,d:2})}
            """

        kc  """
            d = v: x
                    c:1
                    d:2
                k:1
            """ ▸
            """
            d = {v:x({c:1,d:2}),k:1}
            """

        kc  """
            switch y
                'z'
                    x
                        c:1
                        d:2
                'zz'
                    xx
                        e:3
            """ ▸
            """
            switch (y)
            {
                case 'z':
                    x({c:1,d:2})
                    break
                case 'zz':
                    xx({e:3})
                    break
            }
            
            """

        kc  """
            for y in [1..10]
                x
                    c:1
                    d:2
            """ ▸
            """
            for (y = 1; y <= 10; y++)
            {
                x({c:1,d:2})
            }
            """

        kc  """
            for y in [1..10]
                x   c:1
                    d:2
            """ ▸
            """
            for (y = 1; y <= 10; y++)
            {
                x({c:1,d:2})
            }
            """
            
        kc  """
            for y in [1..10]
                x   c:a
                    d:2
            """ ▸
            """
            for (y = 1; y <= 10; y++)
            {
                x({c:a,d:2})
            }
            """
            
        kc  """
            for y in [1..10]
                x   c:a
                        d:2
            """ ▸
            """
            for (y = 1; y <= 10; y++)
            {
                x({c:a({d:2})})
            }
            """
        
        ke  """
            f = (a) -> a
            
            f 
                1 ? 2 : 3
            """ ▸ 2
            
        ke  """
            f = (a) -> a
            
            f 1 ? 2 : 3
            """ ▸ 2
            
        ke  """
            f = (a) -> a
            
            f if 1 then 2 else 3
            """ ▸ 2

        ke  """
            f = (a) -> a
            
            f 
                if 1 then 2 else 3
            """ ▸ 2
            
        #  0000000   0000000   00     00  00     00   0000000   
        # 000       000   000  000   000  000   000  000   000  
        # 000       000   000  000000000  000000000  000000000  
        # 000       000   000  000 0 000  000 0 000  000   000  
        #  0000000   0000000   000   000  000   000  000   000  
        
        ▸ comma
            
            kc  """
                c 1,
                  2
                """ ▸
                """
                c(1,2)
                """            
            
    #  0000000  000   000   0000000   000  000   000  
    # 000       000   000  000   000  000  0000  000  
    # 000       000000000  000000000  000  000 0 000  
    # 000       000   000  000   000  000  000  0000  
    #  0000000  000   000  000   000  000  000   000  
    
    ▸ chain
    
        kc  """
            c = []
                .map (t) -> t
                .length > 0
            """ ▸
            """
            c = [].map(function (t)
            {
                return t
            }).length > 0
            """
            